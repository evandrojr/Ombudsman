# Sistema de Ouvidoria: um canal através do qual os usuários
# podem encaminhar suas reclamações, elogios e sugestões.
# 
# Copyright (C) 2011 SERPRO
# 
# Este programa é software livre; você pode redistribuí-lo e/ou
# modificá-lo sob os termos da Licença Pública Geral GNU, conforme
# publicada pela Free Software Foundation; tanto a versão 2 da
# Licença como (a seu critério) qualquer versão mais nova.
# 
# Este programa é distribuído na expectativa de ser útil, mas SEM
# QUALQUER GARANTIA; sem mesmo a garantia implícita de
# COMERCIALIZAÇÃO ou de ADEQUAÇÃO A QUALQUER PROPÓSITO EM
# PARTICULAR. Consulte a Licença Pública Geral GNU para obter mais
# detalhes.
# 
# Você deve ter recebido uma cópia da Licença Pública Geral GNU,
# sob o título "LICENCA.txt", junto com esse programa. Se não,
# acesse o Portal do Software Público Brasileiro no endereço
# http://www.softwarepublico.gov.br/ ou escreva para a Fundação do
# Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02111-1301, USA.
# 
# Contatos através do seguinte endereço internet:
# http://www.serpro.gov.br/sistemaouvidoria/

datasource.jndiName=ouvidoria

chart.colors=\
  \#0000FF, \#FF3300, \#A0C000, \#600080, \#FFFF00, \#E0A0C0,
  \#800000, \#3399FF, \#FF00FF, \#E0C000, \#66FF00, \#4060C0,
  \#00FFFF, \#800080, \#008080, \#CCFFFF, \#C0DCC0, \#FFCCCC,
  \#E06000, \#336600, \#A6CAF0, \#0060C0, \#40C0C0,	\#A04080,
  \#E08080, \#9933FF, \#000080, \#E0E080, \#E0A000

ii.table.names=\
		Avalia\u00E7\u00E3o de resposta,\
	    Sexo,\
		Faixa Et\u00E1ria,\
		Escolaridade,\
		Tipo da Mensagem,\
		Assunto da Mensagem,\
		Local de resid\u00EAncia,\
		Tipo de Usu\u00E1rio,\
		Status da Mensagem,\
		Pa\u00EDses,\
		Meio de envio da resposta,\
		Meio de recebimento da resposta


ii.cod_instit_tables=0,4,5,10
# assunto,tipomensagem,tipoavaliacaoresposta,MeioEnvioRespOrgao
# t.cod_instit =" + getOrgao(request).getId()

# externos total at prazo : Os atendimentos exibidos s\u00E3o apenas os que est\u00E3o no praszo previsto qwuanndo da dcria\u00E7\u00E3o dos acionamentos

ii.combo_query.-1=SELECT -1 as id\, 'SELECIONE UMA TABELA'
ii.combo_query.0=( SELECT COD_TIPO_AVAL_RESP as id\, DSC_TIPO_AVAL_RESP as descricao FROM tipoavaliacaoresposta where cod_instit = {0} ) UNION ( select ''''\, ''N\u00E3o Informada'' as descricao ) order by descricao
ii.combo_query.1=SELECT distinct TIP_SEXO as id\, CASE TIP_SEXO WHEN 'F' THEN 'Feminino' WHEN 'M' THEN 'Masculino' ELSE 'N\u00E3o Informado' END AS descricao from acionador order by descricao
ii.combo_query.2=SELECT COD_FAIXA_ETARIA as id\, DSC_INTERV as descricao FROM faixaetaria UNION SELECT ''\, 'N\u00E3o Informado'
ii.combo_query.3=SELECT COD_ESCOLA as id\, DSC_ESCOLA as descricao FROM escolaridade UNION SELECT ''\, 'N\u00E3o Informado'
ii.combo_query.4=SELECT COD_TIPO_MSG as id\, DSC_TIPO_MSG as descricao FROM tipomensagem where cod_instit = {0} order by descricao
ii.combo_query.5=SELECT a.COD_ASSNTO as id\, a.DSC_ASSNTO as descricao FROM assunto a INNER JOIN instituicao i ON i.COD_INSTIT = a.COD_INSTIT where i.cod_instit_pai = {0} and a.dat_vigenc is null or a.dat_vigenc > now() order by descricao 
ii.combo_query.6=( SELECT COD_UF as id\, DSC_UF as descricao FROM uf ) UNION ( SELECT ''\, 'N\u00E3o Informado' as descricao ) order by descricao
ii.combo_query.7=SELECT COD_TIPO_ACNDOR as id\, DSC_TIPO_ACNDOR as descricao FROM tipoacionador order by descricao 
ii.combo_query.8=SELECT COD_ESTADO_ACNMNT as id\, DSC_ESTADO_ACNMNT as descricao FROM estadoacionamento  order by descricao 
ii.combo_query.9=( SELECT COD_PAIS as id\, DSC_PAIS as descricao FROM pais ) UNION ( SELECT ''\, 'N\u00E3o Informado' as descricao ) order by descricao
ii.combo_query.10=( SELECT m.COD_MEIO_ENV_RESP as id\, m.DSC_MEIO_ENV_RESP as descricao FROM meioenvioresposta m\
	\, meioenviorespostaorgao mo where m.COD_MEIO_ENV_RESP = mo.COD_MEIO_ENV_RESP AND mo.COD_INSTIT= {0} ) UNION ( SELECT ''''\, ''Scripts'' as descricao) order by descricao 
ii.combo_query.11=SELECT COD_MEIO_RECEB as id\, DSC_MEIO_RECEB as descricao FROM meiorecebimento order by descricao

# {0} = ii.firstFields ...
# {1} = ii.from_tables.0
# {2} = ii.where_tables.0
# {3} = AND A.DAT_ACNMNT BETWEEN STR_TO_DATE(''01/10/2004'', ''%d/%m/%Y'') AND STR_TO_DATE(''31/01/2005'', ''%d/%m/%Y'')
# {4} = AND a.COD_LOCAL_OCORR IN (5, 7, 9 ...)
# {5} = ii.groupBy ...
ii.base.sql=SELECT {0} FROM acionamento a LEFT JOIN localidadeocorrencia loco ON a.COD_LOCAL_OCORR = loco.COD_LOCAL_OCORR {1} WHERE {2} {3} {4} GROUP BY {5}
ii.base.sql.union=SELECT {0} FROM acionamento a LEFT JOIN localidadeocorrencia loco ON a.COD_LOCAL_OCORR = loco.COD_LOCAL_OCORR {1} WHERE {2} {3} GROUP BY ID
# LEFT JOIN localidadeocorrencia loco ON a.COD_LOCAL_OCORR = loco.COD_LOCAL_OCORR
ii.firstFields.detail=loco.DSC_LOCAL_OCORR\, CASE {0} {1} ELSE ''Outros'' END AS ID\, COUNT(a.COD_ACNMNT) AS COUNT
ii.groupBy.detail=loco.DSC_LOCAL_OCORR\, ID order by ID\, loco.DSC_LOCAL_OCORR 

# {0} = ii.case_field.cons
# {1} = getCaseForTableItems(...)
ii.firstFields.cons.table=CASE {0} {1} ELSE ''Outros'' END AS ID\, COUNT(a.COD_ACNMNT) AS COUNT
ii.groupBy.cons.table=ID order by ID

ii.firstFields.cons.loc=loco.DSC_LOCAL_OCORR AS ID\, COUNT(a.COD_ACNMNT) AS COUNT
ii.groupBy.cons.loc=loco.DSC_LOCAL_OCORR order by loco.DSC_LOCAL_OCORR

# CONSOLIDADO #####
# TABELA: 
# FIRST_FIELD=CASE t.COD_TIPO_AVAL_RESP {0} ELSE ''Outros'' END AS ID
# GROUPBY=ID 
#
# LOCALIDADE:
# FIRST_FIELD=a.COD_LOCAL_OCORR
# GROUPBY=COD_LOCAL_OCORR

# DETALHADO #####
# TABELA: 
# FIRST_FIELD=a.COD_LOCAL_OCORR\, CASE t.COD_TIPO_AVAL_RESP {0} ELSE ''Outros'' END AS ID
# GROUPBY=COD_LOCAL_OCORR, ID 
#
# LOCALIDADE:
# FIRST_FIELD=a.COD_LOCAL_OCORR\, CASE t.COD_TIPO_AVAL_RESP {0} ELSE ''Outros'' END AS ID
# GROUPBY=COD_LOCAL_OCORR, ID ??

# --------------------------------------------------------------------------------------------------------------

# AVALIACAO DE RESPOSTA
ii.case_field.cons.0=tar.COD_TIPO_AVAL_RESP
ii.from_tables.0=\, respostaacionamento ra LEFT JOIN tipoavaliacaoresposta tar ON ra.COD_TIPO_AVAL_RESP = tar.COD_TIPO_AVAL_RESP
ii.where_tables.0=a.COD_RESP = ra.COD_RESP AND tar.cod_instit = {0}


# SEXO
ii.case_field.cons.1=c.TIP_SEXO
ii.from_tables.1=\, acionador c
ii.where_tables.1=a.COD_ACNDOR = c.COD_ACNDOR

# SELECT
#   CASE C.TIP_SEXO
#   WHEN 'F' THEN 'Feminino'
#   WHEN 'M' THEN 'Masculino'
#   ELSE 'N\u00E3o Informado'
#   END AS SEXO,
#   COUNT(A.COD_ACNMNT) AS COUNT
# FROM
#   ACIONAMENTO           A,
#   ACIONADOR             C

# FAIXA ET\u00C1RIA
ii.case_field.cons.2=c.COD_FAIXA_ETARIA
ii.from_tables.2=\, acionador c LEFT JOIN faixaetaria fa ON c.COD_FAIXA_ETARIA = fa.COD_FAIXA_ETARIA
ii.where_tables.2=a.COD_ACNDOR = c.COD_ACNDOR

# ESCOLARIDADE
ii.case_field.cons.3=c.COD_ESCOLA
ii.from_tables.3=\, acionador c LEFT JOIN escolaridade e ON c.COD_ESCOLA = e.COD_ESCOLA
ii.where_tables.3=a.COD_ACNDOR = c.COD_ACNDOR

# TIPO DE MENSAGEM
ii.case_field.cons.4=m.COD_TIPO_MSG
ii.from_tables.4=\, mensagem m\, tipomensagem tm
ii.where_tables.4=a.COD_MSG = m.COD_MSG AND m.COD_TIPO_MSG = tm.COD_TIPO_MSG AND tm.cod_instit = {0}

# ASSUNTO 
ii.case_field.cons.5=m.COD_ASSNTO
ii.from_tables.5=\, mensagem m\, assunto snt
ii.where_tables.5=a.COD_MSG = m.COD_MSG AND m.COD_ASSNTO = snt.COD_ASSNTO

# UF
ii.case_field.cons.6=c.COD_UF
ii.from_tables.6=\, acionador c LEFT JOIN uf u ON c.COD_UF = u.COD_UF
ii.where_tables.6=a.COD_ACNDOR = c.COD_ACNDOR
  
# TIPO DE ACIONADOR
ii.case_field.cons.7=c.COD_TIPO_ACNDOR
ii.from_tables.7=\, acionador c\, tipoacionador ta
ii.where_tables.7=a.COD_ACNDOR = c.COD_ACNDOR AND c.COD_TIPO_ACNDOR = ta.COD_TIPO_ACNDOR

# ESTADO DO ACIONAMENTO (Mensagem)
ii.case_field.cons.8=a.COD_ESTADO_ACNMNT
ii.from_tables.8=\, estadoacionamento ea
ii.where_tables.8=a.COD_ESTADO_ACNMNT = ea.COD_ESTADO_ACNMNT

# PA\u00CDS
ii.case_field.cons.9=c.COD_PAIS
ii.from_tables.9=\, acionador c\, pais p
ii.where_tables.9=a.COD_ACNDOR = c.COD_ACNDOR AND c.COD_PAIS = p.COD_PAIS

# MEIO DE ENVIO DE RESPOSTA
ii.case_field.cons.10=c.COD_MEIO_ENVIO_RESP_ORGAO
ii.from_tables.10=\, acionador c\, meioenvioresposta mer\, meioenviorespostaorgao mero
ii.where_tables.10=a.COD_ACNDOR = c.COD_ACNDOR AND c.COD_MEIO_ENVIO_RESP_ORGAO = mer.COD_MEIO_ENV_RESP AND mer.COD_MEIO_ENV_RESP = mero.COD_MEIO_ENV_RESP AND mero.COD_INSTIT= {0}

# MEIO DE RECEBIMENTO
ii.case_field.cons.11=a.COD_MEIO_RECEB
ii.from_tables.11=LEFT JOIN meiorecebimento mr ON a.COD_MEIO_RECEB = mr.COD_MEIO_RECEB
ii.where_tables.11=1=1

# ---------------------
# Indicadores Externos
# ---------------------

# {0} = ii.firstFields ...
# {1} = ii.from_tables.0
# {2} = ii.where_tables.0
# {3} = AND A.DAT_ACNMNT BETWEEN STR_TO_DATE(''01/10/2004'', ''%d/%m/%Y'') AND STR_TO_DATE(''31/01/2005'', ''%d/%m/%Y'')
# {4} = AND a.COD_LOCAL_OCORR IN (5, 7, 9 ...)
# {5} = ii.groupBy ...
ie.base.sql=SELECT {0} FROM acionamento a LEFT JOIN localidadeocorrencia loco ON a.COD_LOCAL_OCORR = loco.COD_LOCAL_OCORR \
\ {1} WHERE {2} {3} {4} GROUP BY {5}

ie.time.d=CASE WEEKDAY(a.DAT_ACNMNT)\
\ WHEN 0 THEN 'Segunda'\
\ WHEN 1 THEN 'Terça'\
\ WHEN 2 THEN 'Quarta'\
\ WHEN 3 THEN 'Quinta'\
\ WHEN 4 THEN 'Sexta'\
\ WHEN 5 THEN 'Sábado'\
\ WHEN 6 THEN 'Domingo'\
\ END AS TIME

# Calcula a semana do m\u00EAs correspondente \u00E0 data contida em a.DAT_ACNMNT (de 1 a 6)
ie.time.w=CONCAT('Semana '\, \
1 + FLOOR( (DAYOFMONTH(a.DAT_ACNMNT) - 1 + (WEEKDAY(DATE_FORMAT(a.DAT_ACNMNT\, '%Y-%m-1')) + 1) % 7) / 7 ) \	
) AS TIME

ie.time.m=CASE MONTH(a.DAT_ACNMNT)\
\ WHEN 1 THEN 'Janeiro'\
\ WHEN 2 THEN 'Fevereiro'\
\ WHEN 3 THEN 'Março'\
\ WHEN 4 THEN 'Abril'\
\ WHEN 5 THEN 'Maio'\
\ WHEN 6 THEN 'Junho'\
\ WHEN 7 THEN 'Julho'\
\ WHEN 8 THEN 'Agosto'\
\ WHEN 9 THEN 'Setembro'\
\ WHEN 10 THEN 'Outubro'\
\ WHEN 11 THEN 'Novembro'\
\ WHEN 12 THEN 'Dezembro'\
\ END AS TIME

ie.time.s=CONCAT( IF (MONTH(a.DAT_ACNMNT) <= 6\, 'Primeiro '\, 'Segundo ' )\, 'Semestre/'\, YEAR(a.DAT_ACNMNT)) AS TIME

ie.time.y=YEAR(a.DAT_ACNMNT) AS TIME

loco.left_join=LEFT JOIN localidadeocorrencia loco ON a.COD_LOCAL_OCORR = loco.COD_LOCAL_OCORR
loco.fields=loco.DSC_LOCAL_OCORR

# SATISFA\u00C7\u00C3O (Tipo Avalia\u00E7\u00E3o)
# {0} = fields, (add 'ie.time.{time},'. if detailed, add 'loco.fields,')
# {1} = from_tables (if detailed, add loco.left_join)
# {2} = where_tables
# {3} = group_by (add time_domain. if detailed, add ',loco.fields')
# {4} = orgao.getId(),
ie.select.1=SELECT {0} COUNT(a.COD_ACNMNT) AS COUNT FROM acionamento a {1} WHERE {2} GROUP BY TIME{3}
ie.from_tables.1=\, respostaacionamento r LEFT JOIN tipoavaliacaoresposta t ON r.COD_TIPO_AVAL_RESP = t.COD_TIPO_AVAL_RESP AND t.IND_TIPO_AVAL_RESP = 'P'
ie.where_tables.1=a.COD_RESP = r.COD_RESP

# TEMPO DE ATENDIMENTO
ie.select.2=SELECT {0}{4} SUM( DATEDIFF(r.DAT_ENVIO_RESP\, r.DAT_RESP_ACNMNT) ) / COUNT(a.COD_ACNMNT) AS MEDIA_DIAS\, COUNT(a.COD_ACNMNT) AS COUNT\
\ FROM acionamento a {1} WHERE {2}{3} 
ie.from_tables.2=\, estadoacionamento e\, respostaacionamento r \, acionador u \, meioenvioresposta m
ie.where_tables.2=a.COD_ESTADO_ACNMNT = e.COD_ESTADO_ACNMNT AND a.COD_RESP = r.COD_RESP AND a.COD_ACNDOR = u.COD_ACNDOR\
\ AND u.COD_MEIO_ENVIO_RESP_ORGAO = m.COD_MEIO_ENV_RESP AND e.COD_ESTADO_ACNMNT = 6 AND m.COD_MEIO_ENV_RESP IN (4\, 5\, 3) 

# TOTAL DE ATENDIMENTOS
# SELECT time_domain, COUNT(a.COD_ACNMNT) AS COUNT GROUP BY time_domain
ie.select.3=SELECT {0} COUNT(a.COD_ACNMNT) AS COUNT FROM acionamento a {1} WHERE {2} GROUP BY TIME{3}
ie.from_tables.3=
ie.where_tables.3=1=1

# {4} = subquery
# TOTAL DE ATENDIMENTOS NO PRAZO
# SELECT time_domain, COUNT(a.COD_ACNMNT) AS COUNT GROUP BY time_domain
ie.select.4=SELECT {0} COUNT(a.COD_ACNMNT) AS COUNT\, ({4}) AS COUNT_IN FROM acionamento a {1} WHERE {2} GROUP BY TIME{3}
ie.subselect.4=SELECT COUNT(a_in.COD_ACNMNT) FROM acionamento a_in\
\ WHERE a_in.IND_ATEND_PRAZO = ''1'' AND {0} = TIME AND {1} 
ie.from_tables.4=
ie.where_tables.4=1=1


# ---------------------
# Indicadores Hist\u00F3rico
# ---------------------

# Total de respostas satisfat\u00F3rias. Era SATISFA\u00C7\u00C3O (Tipo Avalia\u00E7\u00E3o)

-- TOTAL DE RESPOSTAS SATISFATORIAS (SATISFACAO) --

-- TOTAL DE RESPOSTAS AVALIADAS --
SELECT a.COD_LOCAL_OCORR AS LOCALIDADE, -- DETALHADO
{0} COUNT(a.COD_ACNMNT) AS COUNT
FROM ACIONAMENTO           A, RESPOSTAACIONAMENTO   R
  LEFT JOIN TIPOAVALIACAORESPOSTA T ON R.COD_TIPO_AVAL_RESP = T.COD_TIPO_AVAL_RESP
WHERE
  A.COD_RESP = R.COD_RESP                    AND
  T.DSC_TIPO_AVAL_RESP IS NOT NULL
GROUP BY DIA_SEMANA             -- CONSOLIDADO
GROUP BY LOCALIDADE, DIA_SEMANA -- DETALHADO
-- FIM DE TOTAL DE RESPOSTAS AVALIADAS --

UNION

-- TOTAL DE ACIONAMENTOS RESPONDIDOS -- 
SELECT A.COD_LOCAL_OCORR AS LOCALIDADE, -- DETALHADO
	{0} COUNT(a.COD_ACNMNT) AS COUNT
FROM ACIONAMENTO           A, RESPOSTAACIONAMENTO   R
WHERE
  A.COD_RESP = R.COD_RESP                    AND
GROUP BY DIA_SEMANA             -- CONSOLIDADO
GROUP BY LOCALIDADE, DIA_SEMANA -- DETALHADO
-- FIM DE TOTAL DE ACIONAMENTOS RESPONDIDOS -- 

UNION
-- AVALIACOES POSITIVAS --
SELECT
  A.COD_LOCAL_OCORR AS LOCALIDADE, -- DETALHADO
	{0} COUNT(a.COD_ACNMNT) AS COUNT
FROM ACIONAMENTO A, RESPOSTAACIONAMENTO   R LEFT JOIN TIPOAVALIACAORESPOSTA T ON R.COD_TIPO_AVAL_RESP = T.COD_TIPO_AVAL_RESP
WHERE
  A.COD_RESP = R.COD_RESP                    AND
  T.IND_TIPO_AVAL_RESP = 'P'
GROUP BY DIA_SEMANA             -- CONSOLIDADO
GROUP BY LOCALIDADE, DIA_SEMANA -- DETALHADO
-- FIM AVALIACOES POSITIVAS --


# {0} = fields, (add 'ie.time.{time},'. if detailed, add 'loco.fields,')
# {1} = from_tables (if detailed, add loco.left_join)
# {2} = where_tables
# {3} = group_by (add time_domain. if detailed, add ',loco.fields')

# SATISFA\u00C7\u00C3O (Tipo Avalia\u00E7\u00E3o)
# {0} = TIME
# {1} = TIME (if detailed, add 'loco.fields,')
# {2} = from_tables (if detailed, add loco.left_join)
# {3} = where_tables
# {4} = date local
# {5} = group_by (add time_domain. if detailed, add ',loco.fields')
# {6} = date local a_in
# {7} = date local a_in2
# {8} = {time match} = TIME {AND a_in.COD_LOCAL_OCORR = loco.DSC_LOCAL_OCORR} a_in
# {9} = {time match} = TIME {AND a_in2.COD_LOCAL_OCORR = loco.DSC_LOCAL_OCORR} a_in2

ih.select.1=SELECT {1} COUNT(a.COD_ACNMNT) AS RESPONDIDOS\,\

\ (SELECT COUNT(a_in.COD_ACNMNT) FROM acionamento a_in\, respostaacionamento r_in\, tipoavaliacaoresposta t_in\
\ WHERE a_in.COD_RESP = r_in.COD_RESP AND r_in.COD_TIPO_AVAL_RESP = t_in.COD_TIPO_AVAL_RESP \
\ AND {6} \
\ AND {8}\
\) AS AVALIADOS\,\

\ (SELECT COUNT(a_in2.COD_ACNMNT) FROM acionamento a_in2\, respostaacionamento r_in2\, tipoavaliacaoresposta t_in2\
\ WHERE a_in2.COD_RESP = r_in2.COD_RESP AND r_in2.COD_TIPO_AVAL_RESP = t_in2.COD_TIPO_AVAL_RESP \
\ AND t_in2.IND_TIPO_AVAL_RESP  = ''P''\
\ AND {7} \
\ AND {9}\
\) AS SATISFATORIOS\

\ FROM acionamento a\, estadoacionamento e {2}\
\ WHERE {3} {4} GROUP BY TIME{5} ORDER BY a.DAT_ACNMNT
ih.from_tables.1=
ih.where_tables.1=a.COD_ESTADO_ACNMNT = e.COD_ESTADO_ACNMNT AND e.COD_ESTADO_ACNMNT IN (5\, 6)

# TEMPO MEDIO DE ATENDIMENTO
ih.select.2=${ie.select.2}
ih.from_tables.2=${ie.from_tables.2}
ih.where_tables.2=${ie.where_tables.2}

# TOTAL DE ATENDIMENTOS
ih.select.3=SELECT {0} COUNT(a.COD_ACNMNT) AS COUNT FROM acionamento a {1} WHERE {2} GROUP BY TIME{3} ORDER BY a.DAT_ACNMNT{3}
ih.from_tables.3=\, estadoacionamento e
ih.where_tables.3=a.COD_ESTADO_ACNMNT = e.COD_ESTADO_ACNMNT AND e.COD_ESTADO_ACNMNT IN (5\, 6)

# {4} = subquery
# TOTAL DE ATENDIMENTOS NO PRAZO
# SELECT time_domain, COUNT(a.COD_ACNMNT) AS COUNT GROUP BY time_domain
ih.select.4=SELECT {0} COUNT(a.COD_ACNMNT) AS COUNT\, ({4}) AS COUNT_IN FROM acionamento a {1} WHERE {2} GROUP BY TIME{3}
ih.subselect.4=SELECT COUNT(a_in.COD_ACNMNT) FROM acionamento a_in\
\ WHERE a_in.IND_ATEND_PRAZO = ''1'' AND {0} = TIME AND {1} 
ih.from_tables.4=
ih.where_tables.4=1=1

# ---------------------
# Indicadores F\u00F3rmula
# ---------------------

# ie.select.4=SELECT {0} COUNT(a.COD_ACNMNT) AS COUNT\, ({4}) AS COUNT_IN FROM acionamento a {1} WHERE {2} GROUP BY TIME{3}
# ie.subselect.4=SELECT COUNT(a_in.COD_ACNMNT) FROM acionamento a_in\
# \ WHERE a_in.IND_ATEND_PRAZO = ''1'' AND {0} = TIME AND {1} 



# {0} = fields, (add 'ie.time.{time},'. if detailed, add 'loco.fields,')
# {1} = from_tables (if detailed, add loco.left_join)
# {2} = where_tables
# {3} = group_by (add time_domain. if detailed, add ',loco.fields')
# {4} = subquery
# if.base.select=SELECT {0} COUNT(a.COD_ACNMNT) AS COUNT FROM acionamento a {1} WHERE {2} GROUP BY TIME{3}
# if.base.select=SELECT {0} COUNT(a.COD_ACNMNT) AS COUNT\, ({4}) as total FROM acionamento a {1} WHERE {2} GROUP BY TIME{3} ORDER BY a.DAT_ACNMNT{3}
if.base.select=SELECT {0} COUNT(a.COD_ACNMNT) AS COUNT\, ({4}) as COUNT_IN FROM acionamento a {1} WHERE {2} GROUP BY TIME{3} ORDER BY a.DAT_ACNMNT{3}


# {0} date + loc
# {1} TIME
# {2} a_in.COD_ESTADO_ACNMNT =3
#if.base_subquery=select COUNT(a_in.COD_ACNMNT) AS COUNT_in FROM acionamento a_in {0} where {1} and {2} = TIME {3} 
if.base_subselect=select COUNT(a_in.COD_ACNMNT) FROM acionamento a_in {0} where {1} and {2} = TIME AND {3}

# AVALIACAO DE RESPOSTA
if.from_tables.0=${ii.from_tables.0}
if.where_tables.0=a.COD_RESP = ra.COD_RESP
# AND t.cod_instit = {0}

# SEXO
if.from_tables.1=
if.where_tables.1=1=1

# FAIXA_ETARIA
if.from_tables.2=\ LEFT JOIN faixaetaria fa ON c.COD_FAIXA_ETARIA = fa.COD_FAIXA_ETARIA
if.where_tables.2=1=1

# ESCOLARIDADE
if.from_tables.3=\ LEFT JOIN escolaridade e ON c.COD_ESCOLA = e.COD_ESCOLA
if.where_tables.3=1=1

# Tipo da Mensagem
if.from_tables.4=${ii.from_tables.4}
if.where_tables.4=a.COD_MSG = m.COD_MSG AND m.COD_TIPO_MSG = tm.COD_TIPO_MSG
# AND tm.cod_instit = {0}

# Assunto da Mensagem
if.from_tables.5=${ii.from_tables.5}
if.where_tables.5=a.COD_MSG = m.COD_MSG AND m.COD_ASSNTO = snt.COD_ASSNTO
# AND snt.cod_instit = {0}

# Local de resid\u00EAncia
if.from_tables.6=\ LEFT JOIN uf u ON c.COD_UF = u.COD_UF
if.where_tables.6=1=1

# Tipo de Usu&aacute;rio (tipoacionador)
if.from_tables.7=\, tipoacionador ta
if.where_tables.7=c.COD_TIPO_ACNDOR = ta.COD_TIPO_ACNDOR

# Status da Mensagem (ESTADO_ACIONAMENTO)
if.from_tables.8=${ii.from_tables.8}
if.where_tables.8=${ii.where_tables.8}

# Pa\u00EDs
if.from_tables.9=\, pais p
if.where_tables.9=c.COD_PAIS = p.COD_PAIS

# Meio de envio da resposta  (s\u00E3o iguais ?)
if.from_tables.10=\, meioenvioresposta me
# \, meioenviorespostaorgao mo
if.where_tables.10=c.COD_MEIO_ENVIO_RESP_ORGAO = me.COD_MEIO_ENV_RESP
# AND me.COD_MEIO_ENV_RESP = mo.COD_MEIO_ENV_RESP AND mo.COD_INSTIT= {0}

# Meio de recebimento da resposta
if.from_tables.11=${ii.from_tables.11}
if.where_tables.11=mr.COD_MEIO_RECEB IS NULL

#ACIONADOR C: SEXO / FAIXA_ETARIA / ESCOLARIDADE / UF/ TIPO_ACIONADOR / PAIS / MEIO_ENVIO_RESPOSTA
# 1, 2, 3, 6, 7, 9, 10
